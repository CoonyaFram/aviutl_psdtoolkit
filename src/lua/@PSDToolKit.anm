-- 雀の往来
@Assign
--track0:ID,0,999,0,1
--track1:縮小率,0.01,100,100,0.01
--track2:オフセットX,-5000,5000,0,1
--track3:オフセットY,-5000,5000,0,1
--check0:描画も行う,1
--param:
require("PSDToolKitLib")
PSDToolKitLib.psd:init(
  obj.track0*1000 + obj.layer,
  f ~= nil and f or "",
  l ~= nil and l or "",
  obj.track1/100,
  obj.track2,
  obj.track3
)
f = nil
l = nil
if obj.check0 then
  PSDToolKitLib.psd:render()
  PSDToolKitLib.psd:cleanup()
end

@描画
PSDToolKitLib.psd:render()
PSDToolKitLib.psd:cleanup()

@シンプルビュー
--track0:,-1,999,-1,1
--track1:,-1,999,-1,1
--track2:,-1,999,-1,1
--track3:,-1,999,-1,1
table.insert(PSDToolKitLib.psd.faview, obj.track0)
table.insert(PSDToolKitLib.psd.faview, obj.track1)
table.insert(PSDToolKitLib.psd.faview, obj.track2)
table.insert(PSDToolKitLib.psd.faview, obj.track3)

@口パク あいうえお
--dialog:あ,a="";い,i="";う,u="";え,e="";お,o="";ん,n="";
local v = "";
if PSDToolKitLib.phoneme == "a" then
  v = a ~= nil and a or ""
elseif PSDToolKitLib.phoneme == "i" then
  v = i ~= nil and i or ""
elseif PSDToolKitLib.phoneme == "u" then
  v = u ~= nil and u or ""
elseif PSDToolKitLib.phoneme == "e" then
  v = e ~= nil and e or ""
elseif PSDToolKitLib.phoneme == "o" then
  v = o ~= nil and o or ""
else
  v = n ~= nil and n or ""
end
PSDToolKitLib.phoneme = ""
if v ~= "" then
  PSDToolKitLib.psd.layeradd = PSDToolKitLib.psd.layeradd .. " " .. v
end

@口パク 開閉のみ
--track0:速さ,1,100,1,1
--dialog:開き,m0="";ほぼ開き,m1="";半開き,m2="";ほぼ閉じ,m3="";閉じ,m4="";
local m = {}
if m4 ~= nil and m4 ~= "" then
  table.insert(m, m4)
end
if m3 ~= nil and m3 ~= "" then
  table.insert(m, m3)
end
if m2 ~= nil and m2 ~= "" then
  table.insert(m, m2)
end
if m1 ~= nil and m1 ~= "" then
  table.insert(m, m1)
end
if m0 ~= nil and m0 ~= "" then
  table.insert(m, m0)
end
if #m > 0 then
  local speed = obj.track0
  local id = PSDToolKitLib.psd.id
  local stat = PSDToolKitLib.talkstat[id] or {frame = obj.frame-1, n = 0, p = ""}
  if stat.frame ~= obj.frame-1 then
    stat.n = 0
  end
  local p = PSDToolKitLib.phoneme
  if p == "a" or p == "i" or p == "u" or p == "e" or p == "o" then
    stat.n = stat.n + 1
    if stat.n > #m*speed - 1 then
      stat.n = #m*speed - 1
    end
  else
    stat.n = stat.n - 1
    if stat.n < 0 then
      stat.n = 0
    end
  end
  stat.frame = obj.frame
  stat.p = p
  PSDToolKitLib.psd.layeradd = PSDToolKitLib.psd.layeradd .. " " .. m[math.floor(stat.n / speed) + 1]
  PSDToolKitLib.talkstat[id] = stat
  PSDToolKitLib.phoneme = ""
end

@目パチ
--track0:間隔,0,1000,120,1
--track1:速さ,1,100,1,1
--track2:オフセット,0,10000,0,1
--dialog:開き,m0="";ほぼ開き,m1="";半開き,m2="";ほぼ閉じ,m3="";閉じ,m4="";
local m = {}
if m4 ~= nil and m4 ~= "" then
  table.insert(m, m4)
end
if m3 ~= nil and m3 ~= "" then
  table.insert(m, m3)
end
if m2 ~= nil and m2 ~= "" then
  table.insert(m, m2)
end
if m1 ~= nil and m1 ~= "" then
  table.insert(m, m1)
end
if m0 ~= nil and m0 ~= "" then
  table.insert(m, m0)
end
if #m > 0 then
  if #m > 3 then
    table.insert(m, 1, m[#m-1])
  end

  local interval, speed, offset = obj.track0, obj.track1, obj.track2
  local basetime = obj.frame + interval + offset
  local blink = basetime % interval
  local blink2 = (basetime + speed*#m*2) % (interval * 5)
  local applied = false
  for i, v in ipairs(m) do
    local l = speed*i
    local r = l + speed
    if (l <= blink and blink < r)or(l <= blink2 and blink2 < r) then
      PSDToolKitLib.psd.layeradd = PSDToolKitLib.psd.layeradd .. " " .. v
      applied = true
      break;
    end
  end
  if not applied then
    PSDToolKitLib.psd.layeradd = PSDToolKitLib.psd.layeradd .. " " .. m[#m]
  end
end
