@Render
--track0:Scale,0.01,100,100,0.01
--track1:Offset X,-5000,5000,0,1
--track2:Offset Y,-5000,5000,0,1
--param:
require("PSDToolIPC")
psdtoolipc = {
  id = obj.layer,
  file = f ~= nil and f or "",
  layer = l ~= nil and l or "",
  faview = {},
  scale = obj.track0/100,
  offsetx = obj.track1,
  offsety = obj.track2,
  render = function(self)
    if self.file == "" then
      self:show_usage()
      return
    end
    local ok, modified, width, height = PSDToolIPC.set_properties(self.id, self.file, self)
    if not ok then
      self:show_message("<s,,B>[PSDToolIPC] 画像の読み込みに失敗しました\n\n"..modified)
      return
    end
    if not modified then
      if obj.copybuffer("obj", "cache:"..self.id.." "..self.file) then
        return
      end
      debug_print("psdtool-ipc lua: the properties were not modified but cache is broken")
    end
    
    local max_w, max_h = obj.getinfo("image_max")
    if width > max_w then
      width = max_w
    end
    if height > max_h then
      height = max_h
    end
    obj.setoption("drawtarget","tempbuffer", width, height)
    obj.copybuffer("obj", "tmp")
    local data, w, h = obj.getpixeldata()
    PSDToolIPC.draw(self.id, self.file, data, w, h)
    obj.putpixeldata(data)
    obj.copybuffer("cache:"..self.id.." "..self.file, "obj")
  end,
  is_anchor = function(self, limit)
    for i = 1, limit do
      if obj.getoption("script_name", i) == "SimpleView@PSDToolIPC" then
        return false
      end
    end
    return true
  end,
  show_message = function(self, msg)
    obj.load("framebuffer")
    obj.effect("色調補正","明るさ",25)
    obj.draw()
    obj.setfont("ＭＳ ゴシック", 16, 3, "0xffffff", "0x000000")
    obj.load("text", msg)
    obj.draw()
  end,
  show_usage = function(self)
    if self.offsetx == 1 then
      self:show_message([[<s,,B>
≪ インストール方法 ≫

AviUtl の script フォルダに
PSDToolIPC.dll / PSDToolIPC.exe / @PSDToolIPC.anm をコピー

----------------------------------------------------------------

［ページ 1/3］※Offset X を操作するとページ送りできます
]])
    elseif self.offsetx == 2 then
      self:show_message([[<s,,B>
≪ 使い方 ≫

1. 拡張編集のタイムラインにテキストを追加する
   右クリックメニューから「メディアオブジェクトの追加」→「テキスト」

2. 追加したテキストの「サイズ」を 1 に設定し、
   右上の［＋］ボタンから「アニメーション効果」を追加

3. ウィンドウの左下にあるコンボボックスから
   「Render@PSDToolIPC」を選ぶ

4. キーボードで Shift + Ctrl + Alt + A を押し
   PSDToolIPC ウィンドウを出して、
   そのウィンドウへ PSD ファイルをドラッグ＆ドロップ

5. PSDToolIPC ウィンドウの上部にある［送る］ボタンを押すと
   編集した画像が AviUtl 側に現れます

   ※この［送る］ボタンは
     AviUtl 側で編集中のオブジェクトに設定を書き込むボタンなので、
     ［設定］ボタンがあるウィンドウが閉じられていると上手く動きません

----------------------------------------------------------------

［ページ 2/3］※Offset X を操作するとページ送りできます
]])
    elseif self.offsetx == 3 then
      self:show_message([[<s,,B>
≪ 使い方のコツ ≫

・最近ドラッグ＆ドロップで読み込んだ PSD ファイルや
  最近 AviUtl で描画された PSD ファイルは
  PSDToolIPC ウィンドウの左上にあるコンボボックスから読み込めます
  10-20分程度使わなければメモリ節約のために勝手に消えます

・テキストオブジェクトのテキスト部分には
  PSD ファイルやキャラクターの名前などを入れておくと
  タイムライン上で名前が確認できるので便利です

----------------------------------------------------------------

［ページ 3/3］※Offset X を操作するとページ送りできます
]])
    else
      self:show_message([[<s,,B>
[PSDToolIPC] 画像が読み込まれていません。

※Offset X を 1 にすると説明を読めます。
]])
    end
  end
}
f=nil;
l=nil;
if psdtoolipc:is_anchor(5) then
  psdtoolipc:render()
  psdtoolipc = nil
end

@SimpleView
--track0:,0,999,0,1
--track1:,0,999,0,1
--track2:,0,999,0,1
--track3:,0,999,0,1
if psdtoolipc ~= nil then
  table.insert(psdtoolipc.faview, obj.track0)
  table.insert(psdtoolipc.faview, obj.track1)
  table.insert(psdtoolipc.faview, obj.track2)
  table.insert(psdtoolipc.faview, obj.track3)
  if psdtoolipc:is_anchor(5) then
    psdtoolipc:render()
    psdtoolipc = nil
  end
end
