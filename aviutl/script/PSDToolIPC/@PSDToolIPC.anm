-- 雀の往来
@Render
--track0:ID,0,999,0,1
--track1:縮小率,0.01,100,100,0.01
--track2:オフセットX,-5000,5000,0,1
--track3:オフセットY,-5000,5000,0,1
--check0:ここで描画,1
--param:
require("PSDToolIPCLib")
PSDToolIPCLib.psd:init(
  obj.track0*1000 + obj.layer,
  f ~= nil and f or "",
  l ~= nil and l or "",
  obj.track1/100,
  obj.track2,
  obj.track3
)
if obj.check0 then
  PSDToolIPCLib.psd:render()
  PSDToolIPCLib.psd:cleanup()
end

@SimpleView
--track0:,-1,999,-1,1
--track1:,-1,999,-1,1
--track2:,-1,999,-1,1
--track3:,-1,999,-1,1
--check0:ここで描画,1
if PSDToolIPCLib.psd ~= nil then
  table.insert(PSDToolIPCLib.psd.faview, obj.track0)
  table.insert(PSDToolIPCLib.psd.faview, obj.track1)
  table.insert(PSDToolIPCLib.psd.faview, obj.track2)
  table.insert(PSDToolIPCLib.psd.faview, obj.track3)
  if obj.check0 then
    PSDToolIPCLib.psd:render()
    PSDToolIPCLib.psd:cleanup()
  end
end

@口パク準備 バッファ
--track0:ローカット,1,16000,100,1
--track1:ハイカット,1,16000,1000,1
--track2:しきい値,1,2000,20,1
local n, rate, buf = obj.getaudio(nil, "audiobuffer", "spectrum", 32)
local v = PSDToolIPCLib.talking(buf, rate, obj.track0, obj.track1, obj.track2)
PSDToolIPCLib.phoneme = v and "a" or ""

@口パク準備 wavファイル
--track0:ローカット,1,16000,100,1
--track1:ハイカット,1,16000,1000,1
--track2:しきい値,1,2000,20,1
--file:
PSDToolIPCLib.retnil()
if file ~= nil then
  local n, rate, buf = obj.getaudio(nil, file, "spectrum", 32)
  local v = PSDToolIPCLib.talking(buf, rate, obj.track0, obj.track1, obj.track2)
  PSDToolIPCLib.phoneme = v and "a" or ""
end

@口パク準備 labファイル
--file:
PSDToolIPCLib.retnil()
if file ~= nil then
  PSDToolIPCLib.phoneme = PSDToolIPCLib.talkingphoneme(file, obj.time)
end

@口パク あいうえお
--check0:ここで描画,1
--dialog:あ,a="";い,i="";う,u="";え,e="";お,o="";ん,n="";
if PSDToolIPCLib.psd ~= nil then
  local v = "";
  if PSDToolIPCLib.phoneme == "a" then
    v = a ~= nil and a or ""
  elseif PSDToolIPCLib.phoneme == "i" then
    v = i ~= nil and i or ""
  elseif PSDToolIPCLib.phoneme == "u" then
    v = u ~= nil and u or ""
  elseif PSDToolIPCLib.phoneme == "e" then
    v = e ~= nil and e or ""
  elseif PSDToolIPCLib.phoneme == "o" then
    v = o ~= nil and o or ""
  else
    v = n ~= nil and n or ""
  end
  PSDToolIPCLib.phoneme = ""
  if v ~= "" then
    PSDToolIPCLib.psd.layeradd = PSDToolIPCLib.psd.layeradd .. " " .. v
  end
  if obj.check0 then
    PSDToolIPCLib.psd:render()
    PSDToolIPCLib.psd:cleanup()
  end
end

@口パク
--track0:速さ,1,100,1,1
--check0:ここで描画,1
--dialog:開き,m0="";ほぼ開き,m1="";半開き,m2="";ほぼ閉じ,m3="";閉じ,m4="";
if PSDToolIPCLib.psd ~= nil then
  local m = {}
  if m4 ~= nil and m4 ~= "" then
    table.insert(m, m4)
  end
  if m3 ~= nil and m3 ~= "" then
    table.insert(m, m3)
  end
  if m2 ~= nil and m2 ~= "" then
    table.insert(m, m2)
  end
  if m1 ~= nil and m1 ~= "" then
    table.insert(m, m1)
  end
  if m0 ~= nil and m0 ~= "" then
    table.insert(m, m0)
  end
  if #m > 0 then
    local speed = obj.track0
    local id = PSDToolIPCLib.psd.id
    local stat = PSDToolIPCLib.talkstat[id] or {frame = obj.frame-1, n = 0, p = ""}
    if stat.frame ~= obj.frame-1 then
      stat.n = 0
    end
    local p = PSDToolIPCLib.phoneme
    if p == "a" or p == "i" or p == "u" or p == "e" or p == "o" then
      stat.n = stat.n + 1
      if stat.n > #m*speed - 1 then
        stat.n = #m*speed - 1
      end
    else
      stat.n = stat.n - 1
      if stat.n < 0 then
        stat.n = 0
      end
    end
    stat.frame = obj.frame
    stat.p = p
    PSDToolIPCLib.psd.layeradd = PSDToolIPCLib.psd.layeradd .. " " .. m[math.floor(stat.n / speed) + 1]
    PSDToolIPCLib.talkstat[id] = stat
    PSDToolIPCLib.phoneme = ""
  end
  if obj.check0 then
    PSDToolIPCLib.psd:render()
    PSDToolIPCLib.psd:cleanup()
  end
end

@目パチ
--track0:間隔,0,1000,120,1
--track1:速さ,1,100,1,1
--track2:オフセット,0,10000,0,1
--check0:ここで描画,1
--dialog:開き,m0="";ほぼ開き,m1="";半開き,m2="";ほぼ閉じ,m3="";閉じ,m4="";
if PSDToolIPCLib.psd ~= nil then
  local m = {}
  if m4 ~= nil and m4 ~= "" then
    table.insert(m, m4)
  end
  if m3 ~= nil and m3 ~= "" then
    table.insert(m, m3)
  end
  if m2 ~= nil and m2 ~= "" then
    table.insert(m, m2)
  end
  if m1 ~= nil and m1 ~= "" then
    table.insert(m, m1)
  end
  if m0 ~= nil and m0 ~= "" then
    table.insert(m, m0)
  end
  if #m > 0 then
    if #m > 3 then
      table.insert(m, 1, m[#m-1])
    end

    local interval, speed, offset = obj.track0, obj.track1, obj.track2
    local basetime = obj.frame + interval + offset
    local blink = basetime % interval
    local blink2 = (basetime + speed*#m*2) % (interval * 5)
    local applied = false
    for i, v in ipairs(m) do
      local l = speed*i
      local r = l + speed
      if (l <= blink and blink < r)or(l <= blink2 and blink2 < r) then
        PSDToolIPCLib.psd.layeradd = PSDToolIPCLib.psd.layeradd .. " " .. v
        applied = true
        break;
      end
    end
    if not applied then
      PSDToolIPCLib.psd.layeradd = PSDToolIPCLib.psd.layeradd .. " " .. m[#m]
    end
  end
  if obj.check0 then
    PSDToolIPCLib.psd:render()
    PSDToolIPCLib.psd:cleanup()
  end
end
